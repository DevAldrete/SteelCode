services:
  # Infrastructure
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: code_analysis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"

  # Services
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ORCHESTRATOR_URL=http://orchestrator:8081
    depends_on:
      - orchestrator

  orchestrator:
    build:
      context: ./services/orchestrator
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/code_analysis?sslmode=disable
    depends_on:
      - postgres
      - rabbitmq

  python-analyzer:
    build:
      context: ./services/analyzers/python-analyzer
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
    depends_on:
      - rabbitmq

  results-storage:
    build:
      context: ./services/results-storage
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/code_analysis?sslmode=disable
    depends_on:
      - postgres

  frontend:
    build:
      context: ./web/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080

volumes:
  postgres_data:
