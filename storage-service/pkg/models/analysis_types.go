package models

// Issue defines a simplified structure for an issue for storage service.
// This might be identical to the one in code-analyzer-service/internal/models
// or could diverge if storage needs are different. For now, keeping it simple.
type Issue struct {
	RuleID      string `json:"rule_id,omitempty"`
	Message     string `json:"message,omitempty"`
	Severity    string `json:"severity,omitempty"`
	FilePath    string `json:"file_path,omitempty"`
	LineStart   int    `json:"line_start,omitempty"`
	LineEnd     int    `json:"line_end,omitempty"`
	ColumnStart int    `json:"column_start,omitempty"`
	ColumnEnd   int    `json:"column_end,omitempty"`
	Suggestion  string `json:"suggestion,omitempty"`
}

// AnalysisResult defines a simplified structure for storing analysis results.
// This is the primary model for the storage service.
type AnalysisResult struct {
	ID          string  `json:"id,omitempty"` // Could be UUID, auto-generated by DB
	RequestID   string  `json:"request_id"`   // Correlates with the initial analysis request
	Language    string  `json:"language,omitempty"`
	Issues      []Issue `json:"issues,omitempty"` // Can be JSONB in DB
	Summary     string  `json:"summary,omitempty"`
	SubmittedAt string  `json:"submitted_at,omitempty"` // Timestamps
	CompletedAt string  `json:"completed_at,omitempty"`
	Error       string  `json:"error,omitempty"` // For errors during analysis/storage
}
